apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-boot'

group = 'com.github.dmotta'
version = '1.0-SNAPSHOT'

jar {
	baseName = 'gradle-test'
	version =  '1.0-SNAPSHOT'
}

buildscript {
	ext {
		springBootVersion = '1.4.0.BUILD-SNAPSHOT'
	}
    repositories {    
    	jcenter()
	    mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    jcenter()
    mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.18'
    compile("org.springframework.boot:spring-boot-starter")
      // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]       
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'junit:junit:4.12'
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.3.RELEASE'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

task testTask {
   	 group 'dmotta'
     description 'The hello task greets Gradle by saying "Test Gradle"'

     doFirst {
        println 'Hello Gradle'
     }
     doLast {
        println 'Bye bye Gradle'
     }
} 
